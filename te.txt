#NOTE
# Build script for EBTWIC simualtor
# Compile and build CcpPaymentSimulator.e file and Comile and create shared libraries

# CcpPaymentSimulator.e - File creation 
cd PaymentSim/

#Src - Has Source
#Lib - Has dependent libraries
#Bin - Has executable and config file
#Inc - Has all include header files

#Remove all old object previously created
rm *.o
rm Bin/*.e
rm Lib/*

# Fetch CCE EBTWIC library from artifact
# https://artifactory.fis.dev/artifactory/mps-generic-snapshot-local/CICD/build/releases/mpstools/CCE_EBTWIC_Libraries.tar.gz

cd Lib/
artifactory_fetch.sh  https://artifactory.fis.dev/artifactory/mps-generic-snapshot-local/CICD/build/releases/mpstools/CCE_EBTWIC_Libraries.tar.gz

tar -xvzf CCE_EBTWIC_Libraries.tar.gz
              retVal=$?
                if [ $retVal -ne 0 ]
                then
                    echo "Getting EBT libs fail..."
                    exit 1
                fi

cd ../

# Compile and create runnable environment
make all

if [ -f Bin/CcpPaymentSimulator.e ]
then
	strip Bin/CcpPaymentSimulator.e
	echo "Successfully created EBT WIC binary tool for simulation"
else
        echo "Unable to create executable binary file for EBT WIC"
        exit 1;
fi

rm Lib/CCE_EBTWIC_Libraries.tar.gz

# CcpAtlasLib.so file creation
#Src - Has Source
#Inc - Has Inculde files
cd ../AtlasLib

#Remove all old object previously created
rm *.o
rm *.so

# Compile and create hared library
make all

if [ -f libCcpAtlasLib.so ]
then
	strip libCcpAtlasLib.so
	echo "Successfully created shared library libCcpAtlasLib.so"
else
        echo "Unable to shared library libCcpAtlasLib.so"
        exit 1;
fi
